PiLo hda1
Loading........
Kernel command line: -q run alarm-priority
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  204,600 loops/s.
Boot complete.
Executing 'alarm-priority':
(alarm-priority) begin
(alarm-priority) a thread goes to sleep : priority 25 it will wake up at 526, the time now is : 35
(alarm-priority) (alarm-priority) a thread goes to sleep : priority 29 it will wake up at 526, the time now is : 68
(alarm-priority) and the list in order :
   THREAD ID [3] / NAME [priority 25] / WAKE TIME [526] / TIME NOW [93]
   THREAD ID [4] / NAME [priority 24] / WAKE TIME [526] / TIME NOW [102]
   THREAD ID [5] / NAME [priority 23] / WAKE TIME [526] / TIME NOW [112]
   THREAD ID [6] / NAME [priority 22] / WAKE TIME [526] / TIME NOW [121]
   THREAD ID [7] / NAME [priority 21] / WAKE TIME [526] / TIME NOW [130]
   THREAD ID [8] / NAME [priority 30] / WAKE TIME [526] / TIME NOW [139]
   THREAD ID [9] / NAME [priority 29] / WAKE TIME [526] / TIME NOW [148]
   THREAD ID [10] / NAME [priority 28] / WAKE TIME [526] / TIME NOW [158]
   THREAD ID [11] / NAME [priority 27] / WAKE TIME [526] / TIME NOW [167]
   THREAD ID [12] / NAME [priority 26] / WAKE TIME [526] / TIME NOW [176]
Kernel PANIC at ../../threads/thread.c:236 in thread_block(): assertion `intr_get_level () == INTR_OFF' failed.
Call stack: 0xc0028589 0xc0020d5b 0xc0023c84 0xc002ac44 0xc00210d2.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 186 ticks
Thread: 0 idle ticks, 186 kernel ticks, 0 user ticks
Console: 1646 characters output
Keyboard: 0 keys pressed
Powering off..